module top_module(
    input clk,
    input load,
    input [511:0] data,
    output [511:0] q
); 
    
    always @(posedge clk) begin
        if (load)
            q <= data;
        else begin
            q[511:0] <= (~{1'b0, q[511:1]} & q) | ({1'b0, q[511:1]} & q & ~{q[510:0], 1'b0}) | (~q & {q[510:0], 1'b0}); 
            //Truth table simplifies to => ~AB + AB~C + ~BC
            //Where A is left => {1'b0, q[511:1]}
            //Where B is center => q
            //Where C is right => {q[510:0], 1'b0}
        end
        
    end

endmodule
